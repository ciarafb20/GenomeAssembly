{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red34\green45\blue53;\red242\green242\blue242;\red34\green45\blue53;
\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c17647\c23137\c27059;\cssrgb\c96078\c96078\c96078;\cssrgb\c17698\c23195\c27095;
\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww15160\viewh14500\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Downloaded my assigned genome from the link provided. The files are in a folder called genomeassembly on my desktop. \
\
# Activated my environment with: conda activate genomeanalysis\
\
# Ran the following two commands: pwd and cd (dragged my genomeassembly folder into terminal) \
\
# Ran SPAdes v4.1.0 with the following code: \cf2 \cb3 \expnd0\expndtw0\kerning0
spades.py -1 Ciara_1.fastq.gz -2 Ciara_2.fastq.gz -o spadesout\
\cf4 \cb5 \
\cf6 \cb7 # Ran ABySS v2.3.7 with the following code: \cf2 \cb3 abyss-pe name=assembly k=96 B=2G in=\'91Ciara_1.fastq.gz Ciara_2.fastq.gz\'92\
\cf8 \cb7 \
# Looked at abyss results with ls command.\
\
# Decluttered abyss results with the following command: \cf2 \cb3 mkdir abyssout\
\pard\pardeftab720\partightenfactor0
\cf2 mv assembly* abyssout/\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf8 \cb7 \
# Noted that we are interested in the assembly-scaffolds.fa and assembly-stats.csv files.\
\
# Checked the quality of spades assembly using QUAST v5.3.0 with the following code: \cf2 \cb3 quast.py spadesout/scaffolds.fasta -o quastspades\
\cf8 \cb7 \
# Checked the quality of abyss assembly using QUAST with the following code: \cf2 \cb3 quast.py abyssout/assembly-scaffolds.fa -o quastabyss\
\cf8 \cb7 \
# Looked at both QUAST files and determined that the spades assembly was the best fit. Screenshots of both quast reports were included in a separate document. \
\
# Ran barrnap v0.9 using the following code to pull rRNA sequences: \cf2 \cb3 barrnap --kingdom bac spadesout/scaffolds.fasta > rRNAsequences.gff\
\cf8 \cb7 \
# Used bedtools v2.31.1 to pull fasta sequences using the following code: \cf2 \cb3 bedtools getfasta -fi spadesout/scaffolds.fasta -bed rRNAsequences.gff -fo rRNAsequences.fasta\
\cf8 \cb7 \
# Decluttered barrnap and bedtools results with the following command: \cf2 \cb3 mkdir rRNAinfo\
\pard\pardeftab720\partightenfactor0
\cf2 mv rRNAs* rRNAinfo/\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf8 \cb7 \
# Used blastn to identify 16S rRNA sequence.\
Closest match: Vibrio cholerae\
\
# Ran DFAST v1.3.6 for protein annotation with the following code: \cf2 \cb3 dfast --genome spadesout/scaffolds.fasta --out dfast_output\
\cf8 \cb7 \
# Protein annotation with RAST. Domain Bacteria, Genus Vibrio, species cholerae, Genetics Code 11, RAST Annotation RASTtk\
\
# Average nucleotide identity with fastANI v1.34 with the following code: \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 neighbors/vulnificus.fasta\
neighbors/harveyi.fasta
\fs18 \cf2 \cb3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf8 \cb7 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \cb3 fastANI -q spadesout/scaffolds.fasta --rl neighbors.txt -o vibrioneighbors.txt\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf8 \cb7 \
\
}